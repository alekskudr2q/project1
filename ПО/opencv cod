import cv2
import numpy as np

def find_coordinates_of_cards(cnts, image):
    #здесь задаются размеры под фильтрацию
    hmax = 200
    hmin = 30
    wmax = 200
    wmin = 30
    sum = 0
    cards_coordinates = {}
    for i in range(0, len(cnts)):
        x, y, w, h = cv2.boundingRect(cnts[i])
        if w > wmin and h > hmin and w < wmax and h < hmax:
            sum += 1
    return sum




my_photo = cv2.imread('77.png')
filterd_image  = cv2.medianBlur(my_photo,7)
img_grey = cv2.cvtColor(filterd_image,cv2.COLOR_BGR2GRAY)

#set a thresh
thresh = 100

#get threshold image
ret,thresh_img = cv2.threshold(img_grey, thresh, 255, cv2.THRESH_BINARY)

#find contours
contours, hierarchy = cv2.findContours(thresh_img, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
#create an empty image for contours
img_contours = np.uint8(np.zeros((my_photo.shape[0],my_photo.shape[1])))

S = 0
S += find_coordinates_of_cards(contours, my_photo)

sel_countours=[]
sel_countours.append(contours[0])
print(S)

cv2.drawContours(img_contours, sel_countours, -1, (255,255,255), 1)

cv2.drawContours(img_contours, contours, -1, (255,255,255), 1)

cv2.imshow('origin', my_photo) # выводим итоговое изображение в окно
cv2.imshow('res', img_contours) # выводим итоговое изображение в окно

cv2.waitKey(4000)
cv2.destroyAllWindows()
